/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from 'ionic-angular/components/select/select';
import * as import4 from '@angular/core/src/linker/query_list';
import * as import5 from '@angular/core/src/linker/view_utils';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/change_detection';
import * as import9 from 'ionic-angular/components/app/app';
import * as import10 from 'ionic-angular/util/form';
import * as import11 from 'ionic-angular/config/config';
import * as import12 from '@angular/core/src/linker/element_ref';
import * as import13 from 'ionic-angular/components/item/item';
import * as import14 from 'ionic-angular/navigation/nav-controller';
import * as import15 from '@angular/forms/src/directives/control_value_accessor';
import * as import16 from '@angular/core/src/metadata/view';
import * as import17 from '@angular/core/src/linker/component_factory';
import * as import18 from '@angular/common/src/directives/ng_if';
import * as import19 from 'ionic-angular/components/button/button';
import * as import20 from '@angular/core/src/linker/template_ref';
import * as import21 from '../button/button.ngfactory';
var renderType_Select_Host = null;
var _View_Select_Host0 = (function (_super) {
    __extends(_View_Select_Host0, _super);
    function _View_Select_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_Select_Host0, renderType_Select_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    Object.defineProperty(_View_Select_Host0.prototype, "_NG_VALUE_ACCESSOR_0_5", {
        get: function () {
            if ((this.__NG_VALUE_ACCESSOR_0_5 == null)) {
                (this.__NG_VALUE_ACCESSOR_0_5 = [this._Select_0_4]);
            }
            return this.__NG_VALUE_ACCESSOR_0_5;
        },
        enumerable: true,
        configurable: true
    });
    _View_Select_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('ion-select', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_Select0(this.viewUtils, this.injector(0), this._appEl_0);
        this._Select_0_4 = new import3.Select(this.parentInjector.get(import9.App), this.parentInjector.get(import10.Form), this.parentInjector.get(import11.Config), new import12.ElementRef(this._el_0), this.renderer, this.parentInjector.get(import13.Item, null), this.parentInjector.get(import14.NavController, null));
        this._query_Option_0_0 = new import4.QueryList();
        this._appEl_0.initComponent(this._Select_0_4, [], compView_0);
        compView_0.create(this._Select_0_4, this.projectableNodes, null);
        var disposable_0 = this.renderer.listen(this._el_0, 'click', this.eventHandler(this._handle_click_0_0.bind(this)));
        var disposable_1 = this.renderer.listen(this._el_0, 'keyup.space', this.eventHandler(this._handle_keyup_space_0_1.bind(this)));
        this._expr_2 = import8.UNINITIALIZED;
        this.init([].concat([this._el_0]), [this._el_0], [
            disposable_0,
            disposable_1
        ], []);
        return this._appEl_0;
    };
    _View_Select_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.Select) && (0 === requestNodeIndex))) {
            return this._Select_0_4;
        }
        if (((token === import15.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_0_5;
        }
        return notFoundResult;
    };
    _View_Select_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if (this._query_Option_0_0.dirty) {
                this._query_Option_0_0.reset([]);
                this._Select_0_4.options = this._query_Option_0_0;
                this._query_Option_0_0.notifyOnChanges();
            }
            if ((this.numberOfChecks === 0)) {
                this._Select_0_4.ngAfterContentInit();
            }
        }
        var currVal_2 = this._Select_0_4._disabled;
        if (import5.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementClass(this._el_0, 'select-disabled', currVal_2);
            this._expr_2 = currVal_2;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_Select_Host0.prototype.destroyInternal = function () {
        this._Select_0_4.ngOnDestroy();
    };
    _View_Select_Host0.prototype._handle_click_0_0 = function ($event) {
        this._appEl_0.componentView.markPathToRootAsCheckOnce();
        var pd_0 = (this._Select_0_4._click($event) !== false);
        return (true && pd_0);
    };
    _View_Select_Host0.prototype._handle_keyup_space_0_1 = function ($event) {
        this._appEl_0.componentView.markPathToRootAsCheckOnce();
        var pd_0 = (this._Select_0_4._keyup() !== false);
        return (true && pd_0);
    };
    return _View_Select_Host0;
}(import1.AppView));
function viewFactory_Select_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_Select_Host === null)) {
        (renderType_Select_Host = viewUtils.createRenderComponentType('', 0, import16.ViewEncapsulation.None, [], {}));
    }
    return new _View_Select_Host0(viewUtils, parentInjector, declarationEl);
}
export var SelectNgFactory = new import17.ComponentFactory('ion-select', viewFactory_Select_Host0, import3.Select);
var styles_Select = [];
var renderType_Select = null;
var _View_Select0 = (function (_super) {
    __extends(_View_Select0, _super);
    function _View_Select0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_Select0, renderType_Select, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    _View_Select0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._anchor_0);
        this._TemplateRef_0_5 = new import20.TemplateRef_(this._appEl_0, viewFactory_Select1);
        this._NgIf_0_6 = new import18.NgIf(this._appEl_0.vcRef, this._TemplateRef_0_5);
        this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_1 = new import2.AppElement(1, null, this, this._anchor_1);
        this._TemplateRef_1_5 = new import20.TemplateRef_(this._appEl_1, viewFactory_Select2);
        this._NgIf_1_6 = new import18.NgIf(this._appEl_1.vcRef, this._TemplateRef_1_5);
        this._el_2 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_2, 'class', 'select-icon');
        this._el_3 = this.renderer.createElement(this._el_2, 'div', null);
        this.renderer.setElementAttribute(this._el_3, 'class', 'select-icon-inner');
        this._el_4 = this.renderer.createElement(parentRenderNode, 'button', null);
        this.renderer.setElementAttribute(this._el_4, 'aria-haspopup', 'true');
        this.renderer.setElementAttribute(this._el_4, 'class', 'item-cover');
        this.renderer.setElementAttribute(this._el_4, 'ion-button', 'item-cover');
        this._appEl_4 = new import2.AppElement(4, null, this, this._el_4);
        var compView_4 = import21.viewFactory_Button0(this.viewUtils, this.injector(4), this._appEl_4);
        this._Button_4_4 = new import19.Button(null, 'item-cover', this.parentInjector.get(import11.Config), new import12.ElementRef(this._el_4), this.renderer);
        this._appEl_4.initComponent(this._Button_4_4, [], compView_4);
        compView_4.create(this._Button_4_4, [[]], null);
        this._expr_0 = import8.UNINITIALIZED;
        this._expr_1 = import8.UNINITIALIZED;
        this._expr_2 = import8.UNINITIALIZED;
        this._expr_3 = import8.UNINITIALIZED;
        this._expr_4 = import8.UNINITIALIZED;
        this.init([], [
            this._anchor_0,
            this._anchor_1,
            this._el_2,
            this._el_3,
            this._el_4
        ], [], []);
        return null;
    };
    _View_Select0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import20.TemplateRef) && (0 === requestNodeIndex))) {
            return this._TemplateRef_0_5;
        }
        if (((token === import18.NgIf) && (0 === requestNodeIndex))) {
            return this._NgIf_0_6;
        }
        if (((token === import20.TemplateRef) && (1 === requestNodeIndex))) {
            return this._TemplateRef_1_5;
        }
        if (((token === import18.NgIf) && (1 === requestNodeIndex))) {
            return this._NgIf_1_6;
        }
        if (((token === import19.Button) && (4 === requestNodeIndex))) {
            return this._Button_4_4;
        }
        return notFoundResult;
    };
    _View_Select0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = !this.context._text;
        if (import5.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._NgIf_0_6.ngIf = currVal_0;
            this._expr_0 = currVal_0;
        }
        var currVal_1 = this.context._text;
        if (import5.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this._NgIf_1_6.ngIf = currVal_1;
            this._expr_1 = currVal_1;
        }
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._Button_4_4.ngAfterContentInit();
            }
        }
        var currVal_2 = this.context.id;
        if (import5.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementProperty(this._el_4, 'id', currVal_2);
            this._expr_2 = currVal_2;
        }
        var currVal_3 = this.context._labelId;
        if (import5.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setElementAttribute(this._el_4, 'aria-labelledby', ((currVal_3 == null) ? null : currVal_3.toString()));
            this._expr_3 = currVal_3;
        }
        var currVal_4 = this.context._disabled;
        if (import5.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this.renderer.setElementAttribute(this._el_4, 'aria-disabled', ((currVal_4 == null) ? null : currVal_4.toString()));
            this._expr_4 = currVal_4;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_Select0;
}(import1.AppView));
export function viewFactory_Select0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_Select === null)) {
        (renderType_Select = viewUtils.createRenderComponentType('', 0, import16.ViewEncapsulation.None, styles_Select, {}));
    }
    return new _View_Select0(viewUtils, parentInjector, declarationEl);
}
var _View_Select1 = (function (_super) {
    __extends(_View_Select1, _super);
    function _View_Select1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_Select1, renderType_Select, import7.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    _View_Select1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'select-placeholder select-text');
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this._expr_0 = import8.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1
        ], [], []);
        return null;
    };
    _View_Select1.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = import5.interpolate(1, '', this.parent.context.placeholder, '');
        if (import5.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setText(this._text_1, currVal_0);
            this._expr_0 = currVal_0;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_Select1;
}(import1.AppView));
function viewFactory_Select1(viewUtils, parentInjector, declarationEl) {
    return new _View_Select1(viewUtils, parentInjector, declarationEl);
}
var _View_Select2 = (function (_super) {
    __extends(_View_Select2, _super);
    function _View_Select2(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_Select2, renderType_Select, import7.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    _View_Select2.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'select-text');
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this._expr_0 = import8.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1
        ], [], []);
        return null;
    };
    _View_Select2.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = import5.interpolate(1, '', (this.parent.context.selectedText || this.parent.context._text), '');
        if (import5.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setText(this._text_1, currVal_0);
            this._expr_0 = currVal_0;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_Select2;
}(import1.AppView));
function viewFactory_Select2(viewUtils, parentInjector, declarationEl) {
    return new _View_Select2(viewUtils, parentInjector, declarationEl);
}
